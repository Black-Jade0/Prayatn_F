// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Admin {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String     @unique
  password     String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String     @db.ObjectId
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Department {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String      @unique
  description String?
  admins      Admin[]
  complaints  Complaint[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Complaint {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String     // Name of person lodging the complaint
  mobileNumber String
  locality     String
  description  String
  status       Status     @default(PENDING)
  priority     Priority   @default(LOW)
  attachments  Bytes[]    // Array of image data stored as bytes
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String     @db.ObjectId
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

enum Status {
  PENDING
  IN_PROGRESS
  RESOLVED
  REJECTED
}
enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}